AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Pinpoint Weather Bot - responds to a text message from a user with current
  weather conditions. Incoming text message must conform to the format "weather <<zipcode>>",
  else it will be ignored.

  '
Metadata:
  AWS::ServerlessRepo::Application:
    Name: Pinpoint-Weather-Bot
    Description: This application responds to an incoming SMS (with format 'weather
      <<zipcode>>') with current weather conditions.
    Author: James Beswick
    SpdxLicenseId: mit-0
    LicenseUrl: s3://jbesw-sar-repos-uswest2/bb66c8f9891604947010c7e819f4d7ce
    ReadmeUrl: s3://jbesw-sar-repos-uswest2/792f2625c22cf61f22e1988c559bca47
    Labels:
    - SMS
    - weather
    - pinpoint
    - lambda
    - nodejs
    HomePageUrl: https://github.com/jbesw/aws-serverless-sar-pinpoint-weather-bot.git
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/jbesw/aws-serverless-sar-pinpoint-weather-bot.git
Parameters:
  APIkey:
    Type: String
    Default: APIkey
    Description: (Required) OpenWeatherMap API key
    AllowedPattern: ^[A-Za-z0-9-]+$
    ConstraintDescription: Required parameter.
  ApplicationId:
    Type: String
    Default: PinpointApplicationId
    Description: (Required) Pinpoint application ID (project ID)
    AllowedPattern: ^[A-Za-z0-9-]+$
    ConstraintDescription: Required parameter.
Globals:
  Function:
    Timeout: 10
Resources:
  smsResponderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://jbesw-sar-repos-uswest2/db48be8ad410cf3a6cab944a520c2027
      Handler: app.lambdaHandler
      Runtime: nodejs8.10
      Policies:
      - Statement:
        - Sid: PinpointAccess
          Effect: Allow
          Action:
          - mobiletargeting:*
          Resource: '*'
        - Sid: PinpointSNStopic
          Effect: Allow
          Action:
          - sns:*
          Resource:
            Ref: smsResponderIncomingSNSTopic
      Events:
        incomingSNS:
          Type: SNS
          Properties:
            Topic:
              Ref: smsResponderIncomingSNSTopic
  smsResponderIncomingSNSTopic:
    Type: AWS::SNS::Topic
Outputs:
  smsResponderFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - smsResponderFunction
      - Arn
  smsResponderFunctionIamRole:
    Description: Implicit IAM Role created for function
    Value:
      Fn::GetAtt:
      - smsResponderFunctionRole
      - Arn
